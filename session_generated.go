// Code generated by go generate; DO NOT EDIT.

package engine

import "github.com/ooni/probe-engine/model"

//go:generate go run generate_session.go

// MaybeProbeIP is like ProbeIP except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultProbeIP.
func (s *Session) MaybeProbeIP() string {
	out := model.DefaultProbeIP
	if s.privacySettings.IncludeIP {
		out = s.ProbeIP()
	}
	return out
}

// MaybeProbeASN is like ProbeASN except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultProbeASN.
func (s *Session) MaybeProbeASN() uint {
	out := model.DefaultProbeASN
	if s.privacySettings.IncludeASN {
		out = s.ProbeASN()
	}
	return out
}

// MaybeProbeASNString is like ProbeASNString except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultProbeASNString.
func (s *Session) MaybeProbeASNString() string {
	out := model.DefaultProbeASNString
	if s.privacySettings.IncludeASN {
		out = s.ProbeASNString()
	}
	return out
}

// MaybeProbeCC is like ProbeCC except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultProbeCC.
func (s *Session) MaybeProbeCC() string {
	out := model.DefaultProbeCC
	if s.privacySettings.IncludeCountry {
		out = s.ProbeCC()
	}
	return out
}

// MaybeProbeNetworkName is like ProbeNetworkName except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultProbeNetworkName.
func (s *Session) MaybeProbeNetworkName() string {
	out := model.DefaultProbeNetworkName
	if s.privacySettings.IncludeASN {
		out = s.ProbeNetworkName()
	}
	return out
}

// MaybeResolverIP is like ResolverIP except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultResolverIP.
func (s *Session) MaybeResolverIP() string {
	out := model.DefaultResolverIP
	if s.privacySettings.IncludeIP {
		out = s.ResolverIP()
	}
	return out
}

// MaybeResolverASN is like ResolverASN except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultResolverASN.
func (s *Session) MaybeResolverASN() uint {
	out := model.DefaultResolverASN
	if s.privacySettings.IncludeASN {
		out = s.ResolverASN()
	}
	return out
}

// MaybeResolverASNString is like ResolverASNString except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultResolverASNString.
func (s *Session) MaybeResolverASNString() string {
	out := model.DefaultResolverASNString
	if s.privacySettings.IncludeASN {
		out = s.ResolverASNString()
	}
	return out
}

// MaybeResolverNetworkName is like ResolverNetworkName except that we return the real
// value only if the privacy settings allows us. Otherwise, we just
// return the default value, model.DefaultResolverNetworkName.
func (s *Session) MaybeResolverNetworkName() string {
	out := model.DefaultResolverNetworkName
	if s.privacySettings.IncludeASN {
		out = s.ResolverNetworkName()
	}
	return out
}
